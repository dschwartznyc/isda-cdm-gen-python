FROM python:3.10-alpine
RUN apk add --no-cache bash
RUN apk update
RUN mkdir /opt/isda-cdm-code-gen/python
WORKDIR /opt/isda-cdm-code-gen/python
COPY /Users/dls/projects/isda-cdm-code-gen/python/runtime/rosetta_runtime-1.0.0-py3-none-any.whl rosetta_runtime-1.0.0-py3-none-any.whl
COPY /Users/dls/projects/common-domain-model/rosetta-source/src/generated/python/src /opt/isda-cdm-code-gen/python/src
COPY /Users/dls/projects/common-domain-model/rosetta-source/src/generated/python/pyproject.toml /opt/isda-cdm-code-gen/python/pyproject.toml
RUN python3 -m pip install pydantic
RUN python3 -m pip install jsonpickle
RUN python3 -m pip install rosetta_runtime-1.0.0-py3-none-any.whl
RUN python3 -m pip wheel --no-deps --only-binary :all: .
COPY test /opt/isda-cdm-code-gen/python/test
RUN python3 -m pip install pytest
WORKDIR /opt/isda-cdm-code-gen/python/test
RUN pytest --ignore=utils

# to build (from root directory)
# docker build -f ./build/Dockerfile-Python-Rosetta-Build -t python-gen .
# to run interactively
# docker run -i -t python-gen bash              
# to mimic codefresh
# docker run --rm -it --mount type=bind,source=/Users/dls/projects/common-domain-model/rosetta-source/target/classes/cdm/python,target=/mnt --entrypoint sh python:3.10-alpine
# docker run --rm -it --mount type=bind,source=/Users/dls/projects/isda-cdm-code-gen/python/target/python,target=/mnt --entrypoint sh python:3.10-alpine
# docker run --rm -it --mount type=bind,source=/Users/dls/projects/isda-cdm-code-gen/python/,target=/mnt --entrypoint sh python:3.10-alpine
# docker run --rm -it --entrypoint sh python:3.10-alpine
